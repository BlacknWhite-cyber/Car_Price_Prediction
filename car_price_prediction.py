# -*- coding: utf-8 -*-
"""Car Price Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1x8hBHe2qv6dVzd78n7N0Hi-rc4Boqz0k
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import Lasso
from sklearn import metrics

car_dataset = pd.read_csv('/content/car data.csv')

car_dataset.head()

car_dataset.info()

"""Checking categorical data"""

print(car_dataset.Fuel_Type.value_counts())
print(car_dataset.Car_Name.value_counts())
print(car_dataset.Seller_Type.value_counts())
print(car_dataset.Transmission.value_counts())
# It tells us more about fuel types of car(numerical data), who is selling them alng with transmission

car_dataset.replace({'Fuel_Type':{'Petrol':0,'Diesel':1,'CNG':2}},inplace=True)
car_dataset.replace({'Seller_Type':{'Dealer':0,'Individual':1}},inplace=True)
car_dataset.replace({'Transmission':{'Manual':0,'Automatic':1}},inplace=True)

X = car_dataset.drop(['Car_Name','Selling_Price'],axis=1)
Y = car_dataset['Selling_Price']

print(X)

print(Y)

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.1, random_state=2)

linear_regression_model = LinearRegression()

linear_regression_model.fit(X_train,Y_train)

training_data_prediction = linear_regression_model.predict(X_train)

error_score = metrics.r2_score(Y_train, training_data_prediction)
print("R squared Error : ", error_score)

plt.scatter(Y_train,training_data_prediction)
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title("Actual Prices vs Predicted Prices")
plt.show()

test_data_prediction = linear_regression_model.predict(X_test)

error_score = metrics.r2_score(Y_test,test_data_prediction)
print("R squared error: ", error_score)

plt.scatter(Y_test,test_data_prediction)
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title("Actual Prices vs Predicted Prices")
plt.show()

lasso_regression_model = Lasso()

lasso_regression_model.fit(X_train,Y_train)

training_data_prediction = lasso_regression_model.predict(X_train)

error_score = metrics.r2_score(Y_train, training_data_prediction)
print("R squared Error : ", error_score)

plt.scatter(Y_train,training_data_prediction)
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title("Actual Prices vs Predicted Prices")
plt.show()

"""The above graph shows  very good fit in case of Lasso Regression than the Linear Regression"""

test_data_prediction = lasso_regression_model.predict(X_test)

error_score = metrics.r2_score(Y_test,test_data_prediction)
print("R squared error: ", error_score)

plt.scatter(Y_test,test_data_prediction)
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title("Actual Prices vs Predicted Prices")
plt.show()

